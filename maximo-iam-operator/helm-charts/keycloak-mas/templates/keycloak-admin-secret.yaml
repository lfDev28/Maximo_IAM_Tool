{{- if and .Values.keycloak.admin.createSecret (not .Values.keycloak.admin.existingSecret) }}
{{- $secretName := include "keycloak-mas.adminSecretName" . -}}
{{- $namespace := default .Release.Namespace .Values.namespaceOverride -}}
{{- if not $namespace }}{{- $namespace = "default" -}}{{- end -}}
{{- $existing := lookup "v1" "Secret" $namespace $secretName -}}
{{- $existingPassword := "" -}}
{{- if and $existing $existing.data }}
  {{- if hasKey $existing.data (.Values.keycloak.admin.passwordSecretKey | default "admin-password") -}}
    {{- $existingPassword = (index $existing.data (.Values.keycloak.admin.passwordSecretKey | default "admin-password")) | b64dec -}}
  {{- end -}}
{{- end -}}
{{- $resolvedPassword := default $existingPassword .Values.keycloak.admin.password -}}
{{- if not $resolvedPassword -}}
  {{- $resolvedPassword = randAlphaNum 20 -}}
{{- end -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "keycloak-mas.labels" . | nindent 4 }}
    app.kubernetes.io/component: keycloak
  annotations:
    helm.sh/resource-policy: keep
type: Opaque
stringData:
  {{ .Values.keycloak.admin.passwordSecretKey | default "admin-password" }}: {{ $resolvedPassword | quote }}
{{- end }}
